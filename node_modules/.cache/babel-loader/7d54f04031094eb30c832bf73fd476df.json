{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers; // тело конструктора\n  }\n\n  _checkResStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialUser() {\n    return fetch(`https://${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._checkResStatus(res));\n  }\n\n  getInitialCards() {\n    return fetch(`https://mesto.${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._checkResStatus(res));\n  }\n\n  addNewCard(name, link) {\n    return fetch(`https://mesto.${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._checkResStatus(res));\n  }\n\n  changeLikeCardStatus(id, like) {\n    return fetch(`https://mesto.${this._url}/cards/${id}/likes`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResStatus(res));\n  }\n\n  patchUser(name, about) {\n    return fetch(`https://mesto.${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._checkResStatus(res));\n  }\n\n  patchAvatar(avatar) {\n    return fetch(`https://mesto.${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => this._checkResStatus(res));\n  }\n\n  deleteCard(id) {\n    return fetch(`https://mesto.${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResStatus(res));\n  }\n\n}\n\nconst api = new Api({\n  url: \"nomoreparties.co/v1/cohort-43\",\n  headers: {\n    authorization: \"4c628538-281e-4966-940f-27dfe004ed12\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","options","_url","url","_headers","headers","_checkResStatus","res","ok","json","Promise","reject","status","getInitialUser","fetch","method","then","getInitialCards","addNewCard","name","link","body","JSON","stringify","changeLikeCardStatus","id","like","patchUser","about","patchAvatar","avatar","deleteCard","api","authorization"],"sources":["/Users/lerazernina/Documents/GitHub/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._url = options.url;\n        this._headers = options.headers;\n        // тело конструктора\n    }\n\n    _checkResStatus(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialUser() {\n        return fetch(`https://${this._url}/users/me`, {\n                method: \"GET\",\n                headers: this._headers,\n            })\n            .then((res) => this._checkResStatus(res));\n    }\n\n    getInitialCards() {\n        return fetch(`https://mesto.${this._url}/cards`, {\n                method: \"GET\",\n                headers: this._headers,\n            })\n            .then((res) => this._checkResStatus(res));\n    }\n\n    addNewCard(name, link) {\n        return fetch(`https://mesto.${this._url}/cards`, {\n                method: \"POST\",\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: name,\n                    link: link,\n                })\n            })\n            .then((res) => this._checkResStatus(res));\n    }\n\n    changeLikeCardStatus(id, like) {\n        return fetch(`https://mesto.${this._url}/cards/${id}/likes`, {\n                method: like ? \"PUT\" : \"DELETE\",\n                headers: this._headers,\n            })\n            .then((res) => this._checkResStatus(res));\n    }\n\n    patchUser(name, about) {\n        return fetch(`https://mesto.${this._url}/users/me`, {\n                method: \"PATCH\",\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: name,\n                    about: about\n                })\n            })\n            .then((res) => this._checkResStatus(res));\n    }\n\n    patchAvatar(avatar) {\n        return fetch(`https://mesto.${this._url}/users/me/avatar`, {\n                method: \"PATCH\",\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: avatar,\n                }),\n            })\n            .then((res) => this._checkResStatus(res));\n    }\n\n    deleteCard(id) {\n        return fetch(`https://mesto.${this._url}/cards/${id}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        }).then((res) => this._checkResStatus(res));\n    }\n}\n\nconst api = new Api({\n    url: \"nomoreparties.co/v1/cohort-43\",\n    headers: {\n        authorization: \"4c628538-281e-4966-940f-27dfe004ed12\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport { api };"],"mappings":"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"},"metadata":{},"sourceType":"module"}